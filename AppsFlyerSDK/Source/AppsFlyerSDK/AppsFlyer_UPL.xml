<root xmlns:android="http://schemas.android.com/apk/res/android">
    <buildGradleAdditions>
        <insert>
            repositories {
                mavenCentral()
            }
            dependencies {
                implementation 'com.android.installreferrer:installreferrer:1.0'
                implementation 'com.appsflyer:af-android-sdk:6.5.2'
            }
        </insert>
    </buildGradleAdditions>
        <!--  optional app build.gradle additions -->
    <buildscriptGradleAdditions>
    <insert>
        repositories {
            mavenCentral()
        }
    </insert>
    </buildscriptGradleAdditions>
    <gradleProperties>
        <insert>
            org.gradle.jvmargs='-Dfile.encoding=UTF-8'
        </insert>
    </gradleProperties>
    <androidManifestUpdates>
        <addPermission android:name="android.permission.INTERNET" />
        <addPermission android:name="android.permission.ACCESS_NETWORK_STATE" />
    </androidManifestUpdates>
    <gameActivityImportAdditions>
        <insert>
            import android.app.Application;
            import com.appsflyer.*;

            import com.appsflyer.AppsFlyerInAppPurchaseValidatorListener;
        </insert>
    </gameActivityImportAdditions>
    <gameActivityClassAdditions>
        <insert>
            private String afKey;

            private native static void onAppsFlyerPurchaseValidateSuccessThunkCpp();
            private native static void onAppsFlyerPurchaseValidateErrorThunkCpp(String Error);

            public void afStart(String key, boolean isDebug) {
                afKey = key;
                AppsFlyerLib appsflyer = AppsFlyerLib.getInstance();
                appsflyer.setDebugLog(isDebug);
                appsflyer.init(key, new AppsFlyer2dXConversionCallback(), this)
                        .start(this);

                AppsFlyerLib.getInstance().registerValidatorListener(this,new
                    AppsFlyerInAppPurchaseValidatorListener() {
                        public void onValidateInApp() {
                            Log.debug("AppsFlyer: Purchase validated successfully");

                            onAppsFlyerPurchaseValidateSuccessThunkCpp();
                        }
                        public void onValidateInAppFailure(String error) {
                            Log.debug("AppsFlyer: onValidateInAppFailure called: " + error);

                            onAppsFlyerPurchaseValidateErrorThunkCpp(error);
                        }
                });
            }

            public void afSetCustomerUserId(String id) {
                AppsFlyerLib.getInstance().setCustomerUserId(id);
            }

            public void afStartLaunch() {
                AppsFlyerLib.getInstance().start(this, afKey);
            }

            public void afLogEvent(String eventName, Map&lt;String, Object&gt; eventValues) {
                AppsFlyerLib.getInstance().logEvent(this, eventName, eventValues);
            }

            public String afGetAppsFlyerUID() {
                return AppsFlyerLib.getInstance().getAppsFlyerUID(this);
            }

            public void afSetAdditionalData(Map&lt;String, Object&gt; customData) {
                AppsFlyerLib.getInstance().setAdditionalData(customData);
            }

            public void afLogAndValidatePurchase(String AmountInString, String Currency, String Signature, String OriginalJson, Map&lt;String, String&gt; customData, String PublicKey) {

                Log.debug("AppsFlyer: Purchase log and validate");
                Log.debug("AppsFlyer: Amount: " + AmountInString);
                Log.debug("AppsFlyer: Currency: " + Currency);
                Log.debug("AppsFlyer: Signature: " + Signature);
                Log.debug("AppsFlyer: Data: " + OriginalJson);
                Log.debug("AppsFlyer: Public key: " + PublicKey);
            
                AppsFlyerLib.getInstance().validateAndLogInAppPurchase(
                    this,
                    PublicKey,
                    Signature,
                    OriginalJson,
                    AmountInString,
                    Currency,
                    customData
                );
            }
        </insert>
    </gameActivityClassAdditions>
</root>
